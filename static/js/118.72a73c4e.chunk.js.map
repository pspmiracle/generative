{"version":3,"sources":["sketches/045_circle_worms/shaders/frag.glsl"],"names":[],"mappings":"4GAAA,OAAe","file":"static/js/118.72a73c4e.chunk.js","sourcesContent":["export default \"#define GLSLIFY 1\\nvarying vec3 pPos;\\nvarying float rSize;\\n\\nvarying vec2 vUv;\\n\\nuniform vec2 iResolution;\\nuniform float iTime;\\nuniform float stackSize;\\n\\n#define BLACK_COL vec3(16,22,26)/255.\\n#define WHITE_COL vec3(235,241,245)/255.\\n\\n#define SF 2./min(iResolution.x, iResolution.y)\\n#define SS(l, s) smoothstep(SF, -SF, l - s)\\n\\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord)\\n{\\n    vec2 uv = (vec3(gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1)).xy - .5;\\n\\n    float l = length(uv);\\n\\n    float sf = 2./rSize;\\n\\n    float circleLimit = smoothstep(.5, .5 - sf, l);\\n\\n    float ll = .1;\\n    float g = smoothstep(sf, -sf, abs(l - (.5 - sf * 1.75)));\\n\\n    float depthFactor = pPos.y / stackSize;\\n\\n    vec3 col = mix(BLACK_COL, WHITE_COL, g * depthFactor);\\n\\n    fragColor = vec4(col, circleLimit);\\n}\\n\\nvoid main()\\n{\\n    mainImage(gl_FragColor, vUv * iResolution.xy);\\n}\\n\";"],"sourceRoot":""}