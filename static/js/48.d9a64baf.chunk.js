(this.webpackJsonpgenerative=this.webpackJsonpgenerative||[]).push([[48,122,123],{191:function(n,e,i){"use strict";i.r(e),e.default="precision highp float;\n#define GLSLIFY 1\n\nvarying vec3 vpos;\n\nuniform vec2 iResolution;\nuniform float iTime;\n\nvarying float fogDepth;\nvarying float size;\nuniform float fogDensity;\n\nuniform mat3 uvTransform;\n\n#define PI 3.1415926\n#define TAU 6.2831852\n#define BLACK_COL vec3(24, 32, 38) / 255.\n\n#define rand1(p) fract(sin(p * 78.233) * 43758.5453)\n#define hue(h) clamp(abs(fract(h + vec4(3, 2, 1, 0) / 3.) * 6. - 3.) - 1., 0., 1.)\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (uvTransform * vec3(gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1)).xy - .5;\n\n    float l = length(uv);\n    float g = smoothstep(.5, .3, l);\n\n    fragColor = vec4(vec3(g * .1), g);\n}\n\nvarying vec2 vUv;\n\nvoid main()\n{\n    mainImage(gl_FragColor, vUv * iResolution.xy);\n}\n"},192:function(n,e,i){"use strict";i.r(e),e.default="#define GLSLIFY 1\nvarying vec2 vUv;\nvarying vec3 vpos;\nvarying float size;\n\nuniform float iTime;\nuniform float pSize;\n\nfloat hash12(vec2 p)\n{\n  vec3 p3  = fract(vec3(p.xyx) * .1031);\n  p3 += dot(p3, p3.yzx + 33.33);\n  return fract((p3.x + p3.y) * p3.z);\n}\n\nvoid main()\n{\n    vUv = uv;\n    float t = iTime*1.0;\n\n    vpos = position;\n\n    // vpos.x += hash12(position.xy * 100.)*.05 - .025;\n    // vpos.y += hash12(position.xy * 200.)*.05 - .025;\n\n    float vv = (position.y + position.x)*2. + sin(t)*7.;\n\n    vv = (smoothstep(-3.0, 3.0, vv)) * 3.1415*.5;\n    vv =  sin(vv) * cos(vv);\n\n    vv *= .5;\n    vpos.xy += vv;\n\n    size = pSize;\n    gl_PointSize = pSize;\n\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(vpos, 1.0);\n}\n"},39:function(n,e,i){"use strict";i.r(e),function(n){var t=i(29),o=i(191),a=i(192),r=i(271);n.THREE=r,i(272);e.default={sketch:function(n){var e=n.context,i=n.viewportWidth,v=n.viewportHeight,s=new r.WebGLRenderer({canvas:e.canvas});s.setClearColor("hsl(0, 0%, 98%)",1);var f=new r.OrthographicCamera(-1,1,-1,1,1,1e3),l=new r.Scene,p=new r.PlaneGeometry(2.5,2.5,25,25);p.translate(0,0,-1);var c=r.ShaderLib.points,u=Object(t.a)({},c.uniforms,{iTime:{value:0},pSize:{value:10},iResolution:{value:[i,v]}}),d=new r.ShaderMaterial({uniforms:u,transparent:!0,depthWrite:!1,blending:r.NormalBlending,fragmentShader:o.default,vertexShader:a.default}),g=new r.Points(p,d);return g.sortParticles=!0,l.add(g),{resize:function(n){var e=n.pixelRatio,i=n.viewportWidth,t=n.viewportHeight;s.setPixelRatio(e),s.setSize(i,t,!1),f.aspect=i/t,f.updateProjectionMatrix()},render:function(n){var e=n.time;n.dimensions;d.uniforms.iTime.value=e,s.render(l,f)},unload:function(){s.dispose()}}},settings:{animate:!0,context:"webgl"}}}.call(this,i(28))}}]);
//# sourceMappingURL=48.d9a64baf.chunk.js.map