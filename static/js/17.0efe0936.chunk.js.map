{"version":3,"sources":["sketches/038_colorello/shaders/frag.glsl","sketches/038_colorello/shaders/vert.glsl","../node_modules/defined/index.js","../node_modules/canvas-sketch-util/shader.js","../node_modules/parse-color/index.js","../node_modules/parse-color/node_modules/color-convert/index.js","../node_modules/parse-color/node_modules/color-convert/conversions.js","sketches/038_colorello/index.js"],"names":["module","exports","i","arguments","length","undefined","createRegl","require","createQuad","parseColor","defined","isTextureLike","data","Array","isArray","opt","gl","Error","reglOpts","extensions","optionalExtensions","profile","onDone","drawQuadCommand","regl","quad","textureMap","Map","uniformsMap","uniforms","Object","assign","keys","forEach","key","value","state","props","batchID","result","call","has","prevTex","get","texture","set","scissor","enable","box","x","prop","y","width","height","frag","join","vert","blend","func","srcRGB","srcAlpha","dstRGB","dstAlpha","attributes","position","positions","elements","cells","err","handleError","clearColor","parsed","rgb","slice","map","n","clearAlpha","clear","concat","render","poll","color","depth","stencil","drawQuad","flush","unload","destroy","console","warn","test","message","convert","cstr","m","conv","parts","alpha","exec","name","size","base","replace","split","parseFloat","push","filter","Boolean","parseInt","keyword","res","hsl","hsv","cmyk","hex","e","s","toString","rgba","hsla","hsva","cmyka","conversions","Converter","arg","prototype","pair","from","to","val","Math","round","this","convs","routeSpace","space","args","values","getValues","setValues","vals","fspace","rgb2hsl","h","l","r","g","b","min","max","delta","rgb2hsv","rgb2hwb","rgb2cmyk","k","rgb2keyword","reverseKeywords","JSON","stringify","rgb2xyz","pow","rgb2lab","xyz","z","hsl2rgb","t1","t2","t3","hsv2rgb","v","hi","floor","f","p","q","t","hwb2rgb","hwb","wh","bl","ratio","cmyk2rgb","c","xyz2rgb","xyz2lab","lab2xyz","lab","y2","a","lab2lch","atan2","PI","sqrt","lab2rgb","lch2lab","lch","hr","cos","sin","keyword2rgb","cssKeywords","rgb2lch","hsl2hsv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2lch","lch2xyz","lch2rgb","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","sketch","time","createShader","fragmentShader","vertexShader","iTime","iResolution","settings","context","animate"],"mappings":"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","file":"static/js/17.0efe0936.chunk.js","sourcesContent":["export default \"#version 300 es\\n#ifdef GL_ES\\n    precision highp float;\\n    precision highp int;\\n    precision mediump sampler3D;\\n#define GLSLIFY 1\\n#endif\\n#define HW_PERFORMANCE 1\\nuniform vec3      iResolution;\\nuniform float     iTime;\\nuniform float     iChannelTime[4];\\nuniform vec4      iMouse;\\nuniform vec4      iDate;\\nuniform float     iSampleRate;\\nuniform vec3      iChannelResolution[4];\\nuniform int       iFrame;\\nuniform float     iTimeDelta;\\nuniform float     iFrameRate;\\nstruct Channel {\\n    vec3  resolution;\\n    float time;\\n};\\nuniform Channel iChannel[4];\\nuniform sampler2D iChannel0;\\nuniform sampler2D iChannel1;\\nuniform sampler2D iChannel2;\\nuniform sampler2D iChannel3;\\nvoid mainImage( out vec4 c, in vec2 f );\\n\\n// --------- START-SHADER-TOY-CODE-HERE ------------\\n\\n// Original one hosted on https://www.shadertoy.com/view/3d33RN\\n\\n//\\n// Description : Array and textureless GLSL 2D/3D/4D simplex\\n//               noise functions.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : ijm\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-noise\\n//\\n\\nvec3 mod289(vec3 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 mod289(vec4 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 permute(vec4 x) {\\n     return mod289(((x*34.0)+1.0)*x);\\n}\\n\\nvec4 taylorInvSqrt(vec4 r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nfloat snoise(vec3 v)\\n  {\\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\\n\\n// First corner\\n  vec3 i  = floor(v + dot(v, C.yyy) );\\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\\n\\n// Other corners\\n  vec3 g = step(x0.yzx, x0.xyz);\\n  vec3 l = 1.0 - g;\\n  vec3 i1 = min( g.xyz, l.zxy );\\n  vec3 i2 = max( g.xyz, l.zxy );\\n\\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\\n  vec3 x1 = x0 - i1 + C.xxx;\\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\\n\\n// Permutations\\n  i = mod289(i);\\n  vec4 p = permute( permute( permute(\\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\\n\\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\\n  float n_ = 0.142857142857; // 1.0/7.0\\n  vec3  ns = n_ * D.wyz - D.xzx;\\n\\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\\n\\n  vec4 x_ = floor(j * ns.z);\\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\\n\\n  vec4 x = x_ *ns.x + ns.yyyy;\\n  vec4 y = y_ *ns.x + ns.yyyy;\\n  vec4 h = 1.0 - abs(x) - abs(y);\\n\\n  vec4 b0 = vec4( x.xy, y.xy );\\n  vec4 b1 = vec4( x.zw, y.zw );\\n\\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\\n  vec4 s0 = floor(b0)*2.0 + 1.0;\\n  vec4 s1 = floor(b1)*2.0 + 1.0;\\n  vec4 sh = -step(h, vec4(0.0));\\n\\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\\n\\n  vec3 p0 = vec3(a0.xy,h.x);\\n  vec3 p1 = vec3(a0.zw,h.y);\\n  vec3 p2 = vec3(a1.xy,h.z);\\n  vec3 p3 = vec3(a1.zw,h.w);\\n\\n//Normalise gradients\\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\\n  p0 *= norm.x;\\n  p1 *= norm.y;\\n  p2 *= norm.z;\\n  p3 *= norm.w;\\n\\n// Mix final noise value\\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\\n  m = m * m;\\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\\n                                dot(p2,x2), dot(p3,x3) ) );\\n  }\\n\\n#define hue(h) clamp( abs( fract(h + vec4(3,2,1,0)/3.) * 6. - 3.) -1. , 0., 1.)\\n\\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\\n{\\n    vec2 uv = (fragCoord - iResolution.xy*.5)/iResolution.y;\\n\\n    float f1 = iResolution.y/50.;\\n    float f2 = iResolution.y/175.;\\n\\n    float s = snoise(vec3(uv*f2, iTime*1.25));\\n    s += length(uv)*f1 - iTime*2.;\\n    float m = smoothstep(0.25, .0, abs( fract(s) - .25 ) );\\n\\n    fragColor = vec4(hue(s + length(uv) - iTime*.5)) * m;\\n}\\n\\n// --------- END-SHADER-TOY-CODE-HERE ------------\\n\\nout vec4 outColor;\\nvoid main( void ) {\\n    vec4 color = vec4(0.0, 0.0, 0.0, 1.0);\\n    mainImage( color, gl_FragCoord.xy );\\n    color.w = 1.0;\\n    outColor = color;\\n}\\n\";","export default \"#version 300 es\\n#ifdef GL_ES\\n    precision highp float;\\n    precision highp int;\\n    precision mediump sampler3D;\\n#define GLSLIFY 1\\n#endif\\nlayout(location = 0) in vec3 position;\\nvoid main() {\\n    gl_Position = vec4(position.xy, 0.0, 1.0);\\n}\\n\";","module.exports = function () {\n    for (var i = 0; i < arguments.length; i++) {\n        if (arguments[i] !== undefined) return arguments[i];\n    }\n};\n","var createRegl = require('regl');\nvar createQuad = require('primitive-quad');\nvar parseColor = require('parse-color');\nvar defined = require('defined');\n\nmodule.exports = createShader;\n\nfunction createShader (opt) {\n  opt = opt || {};\n  if (!opt.gl) {\n    throw new Error('Must specify { context: \"webgl\" } in sketch settings, or a WebGL-enabled canvas');\n  }\n\n  var gl = opt.gl;\n  var reglOpts = { gl: gl };\n\n  // regl is strict on what options you pass in\n  if (typeof opt.extensions !== 'undefined') reglOpts.extensions = opt.extensions;\n  if (typeof opt.optionalExtensions !== 'undefined') reglOpts.optionalExtensions = opt.optionalExtensions;\n  if (typeof opt.profile !== 'undefined') reglOpts.profile = opt.profile;\n  if (typeof opt.onDone !== 'undefined') reglOpts.onDone = opt.onDone;\n\n  // Create regl for handling GL stuff\n  var regl = createRegl(reglOpts);\n\n  // A mesh for a flat plane\n  var quad = createQuad();\n\n  var textureMap = new Map();\n\n  // Wire up user uniforms nicely\n  var uniformsMap = opt.uniforms || {};\n  var uniforms = Object.assign({}, uniformsMap);\n  Object.keys(uniformsMap).forEach(function (key) {\n    var value = uniformsMap[key];\n    if (typeof value === 'function') {\n      uniforms[key] = function (state, props, batchID) {\n        var result = value.call(uniformsMap, props, batchID);\n        // If user is using a function to wrap an image,\n        // then we need to make sure we re-upload to same GL texture\n        if (isTextureLike(result)) {\n          if (textureMap.has(value)) {\n            // Texture is already created, re-upload\n            var prevTex = textureMap.get(value);\n            prevTex(result);\n\n            // Return the texture\n            result = prevTex;\n          } else {\n            // Creating the texture for the first time\n            var texture = regl.texture(result);\n            textureMap.set(value, texture);\n\n            // Return the texture, not the image\n            result = texture;\n          }\n        }\n        return result;\n      };\n    } else if (isTextureLike(value)) {\n      uniforms[key] = regl.texture(value);\n    } else {\n      uniforms[key] = value;\n    }\n  });\n\n  // Get the drawing command\n  var drawQuadCommand;\n  try {\n    drawQuadCommand = createDrawQuad();\n  } catch (err) {\n    handleError(err);\n  }\n\n  // Nicely get a clear color for the canvas\n  var clearColor = defined(opt.clearColor, 'black');\n  if (typeof clearColor === 'string') {\n    var parsed = parseColor(clearColor);\n    if (!parsed.rgb) {\n      throw new Error('Error parsing { clearColor } color string \"' + clearColor + '\"');\n    }\n    clearColor = parsed.rgb.slice(0, 3).map(function (n) {\n      return n / 255;\n    });\n  } else if (clearColor && (!Array.isArray(clearColor) || clearColor.length < 3)) {\n    throw new Error('Error with { clearColor } option, must be a string or [ r, g, b ] float array');\n  }\n\n  var clearAlpha = defined(opt.clearAlpha, 1);\n  var clear = clearColor ? clearColor.concat([ clearAlpha || 0 ]) : false;\n\n  // Return a renderer object\n  return {\n    render: function (props) {\n      // On each tick, update regl timers and sizes\n      regl.poll();\n\n      // Clear backbuffer with color\n      if (clear) {\n        regl.clear({\n          color: clear,\n          depth: 1,\n          stencil: 0\n        });\n      }\n\n      // Submit draw command\n      drawQuad(props);\n\n      // Flush pending GL calls for this frame\n      gl.flush();\n    },\n    regl: regl,\n    drawQuad: drawQuad,\n    unload: function () {\n      // Remove GL texture mappings\n      textureMap.clear();\n      // Unload the current regl instance\n      // TODO: We should probably also destroy textures created from this module!\n      regl.destroy();\n    }\n  };\n\n  // A user-friendly draw command that spits out errors\n  function drawQuad (props) {\n    props = props || {};\n    // Draw generative / shader art\n    if (drawQuadCommand) {\n      try {\n        drawQuadCommand(props);\n      } catch (err) {\n        if (handleError(err)) {\n          if (props == null) {\n            console.warn('Warning: shader.render() is not called with any \"props\" parameter');\n          }\n        }\n      }\n    }\n  }\n\n  // Draw command\n  function createDrawQuad () {\n    return regl({\n      scissor: opt.scissor ? {\n        enable: true,\n        box: {\n          x: regl.prop('scissorX'),\n          y: regl.prop('scissorY'),\n          width: regl.prop('scissorWidth'),\n          height: regl.prop('scissorHeight')\n        }\n      } : false,\n      // Pass down props from javascript\n      uniforms: uniforms,\n      // Fall back to a simple fragment shader\n      frag: opt.frag || [\n        'precision highp float;',\n        '',\n        'void main () {',\n        '  gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);',\n        '}'\n      ].join('\\n'),\n      // Fall back to a simple vertex shader\n      vert: opt.vert || [\n        'precision highp float;',\n        'attribute vec3 position;',\n        'varying vec2 vUv;',\n        '',\n        'void main () {',\n        '  gl_Position = vec4(position.xyz, 1.0);',\n        '  vUv = gl_Position.xy * 0.5 + 0.5;',\n        '}'\n      ].join('\\n'),\n      // Setup transparency blending\n      blend: opt.blend !== false ? {\n        enable: true,\n        func: {\n          srcRGB: 'src alpha',\n          srcAlpha: 1,\n          dstRGB: 'one minus src alpha',\n          dstAlpha: 1\n        }\n      } : undefined,\n      // Send mesh vertex attributes to shader\n      attributes: {\n        position: quad.positions\n      },\n      // The indices for the quad mesh\n      elements: quad.cells\n    });\n  }\n\n  function handleError (err) {\n    if (/^\\(regl\\)/.test(err.message)) {\n      // Regl already logs a message to the console :\\\n      // so let's just avoid re-printing the same thing\n      return true;\n    } else {\n      throw err;\n    }\n  }\n}\n\nfunction isTextureLike (data) {\n  return data && !Array.isArray(data) && typeof data === 'object';\n}\n","var convert = require('color-convert');\n\nmodule.exports = function (cstr) {\n    var m, conv, parts, alpha;\n    if (m = /^((?:rgb|hs[lv]|cmyk|xyz|lab)a?)\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n        var name = m[1];\n        var base = name.replace(/a$/, '');\n        var size = base === 'cmyk' ? 4 : 3;\n        conv = convert[base];\n        \n        parts = m[2].replace(/^\\s+|\\s+$/g, '')\n            .split(/\\s*,\\s*/)\n            .map(function (x, i) {\n                if (/%$/.test(x) && i === size) {\n                    return parseFloat(x) / 100;\n                }\n                else if (/%$/.test(x)) {\n                    return parseFloat(x);\n                }\n                return parseFloat(x);\n            })\n        ;\n        if (name === base) parts.push(1);\n        alpha = parts[size] === undefined ? 1 : parts[size];\n        parts = parts.slice(0, size);\n        \n        conv[base] = function () { return parts };\n    }\n    else if (/^#[A-Fa-f0-9]+$/.test(cstr)) {\n        var base = cstr.replace(/^#/,'');\n        var size = base.length;\n        conv = convert.rgb;\n        parts = base.split(size === 3 ? /(.)/ : /(..)/);\n        parts = parts.filter(Boolean)\n            .map(function (x) {\n                if (size === 3) {\n                    return parseInt(x + x, 16);\n                }\n                else {\n                    return parseInt(x, 16)\n                }\n            })\n        ;\n        alpha = 1;\n        conv.rgb = function () { return parts };\n        if (!parts[0]) parts[0] = 0;\n        if (!parts[1]) parts[1] = 0;\n        if (!parts[2]) parts[2] = 0;\n    }\n    else {\n        conv = convert.keyword;\n        conv.keyword = function () { return cstr };\n        parts = cstr;\n        alpha = 1;\n    }\n    \n    var res = {\n        rgb: undefined,\n        hsl: undefined,\n        hsv: undefined,\n        cmyk: undefined,\n        keyword: undefined,\n        hex: undefined\n    };\n    try { res.rgb = conv.rgb(parts) } catch (e) {}\n    try { res.hsl = conv.hsl(parts) } catch (e) {}\n    try { res.hsv = conv.hsv(parts) } catch (e) {}\n    try { res.cmyk = conv.cmyk(parts) } catch (e) {}\n    try { res.keyword = conv.keyword(parts) } catch (e) {}\n    \n    if (res.rgb) res.hex = '#' + res.rgb.map(function (x) {\n        var s = x.toString(16);\n        if (s.length === 1) return '0' + s;\n        return s;\n    }).join('');\n    \n    if (res.rgb) res.rgba = res.rgb.concat(alpha);\n    if (res.hsl) res.hsla = res.hsl.concat(alpha);\n    if (res.hsv) res.hsva = res.hsv.concat(alpha);\n    if (res.cmyk) res.cmyka = res.cmyk.concat(alpha);\n    \n    return res;\n};\n","var conversions = require(\"./conversions\");\n\nvar convert = function() {\n   return new Converter();\n}\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   }\n});\n\nmodule.exports = convert;","/* MIT license */\n\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n}\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n","import createShader from 'canvas-sketch-util/shader';\nimport fragmentShader from './shaders/frag.glsl';\nimport vertexShader from './shaders/vert.glsl';\n\nconst settings = {\n  context: 'webgl2',\n  animate: true,\n};\n\nconst sketch = ({ gl, time }) => {\n  return createShader({\n    gl,\n    frag: fragmentShader,\n    vert: vertexShader,\n    uniforms: {\n      iTime: ({ time }) => time,\n      iResolution: ({ width, height }) => [width, height, 1],\n    },\n  });\n};\n\nexport default { sketch, settings };\n"],"sourceRoot":""}