(this.webpackJsonpgenerative=this.webpackJsonpgenerative||[]).push([[28,113,114,115,116,117],{246:function(n,e,i){"use strict";i.r(e),e.default="#version 300 es\n\n#ifdef GL_ES\nprecision highp float;\nprecision highp int;\nprecision mediump sampler3D;\n#define GLSLIFY 1\n#endif\n\n#define HW_PERFORMANCE 1\n\nuniform vec3 iResolution;\nuniform float iTime;\nuniform float iChannelTime[4];\nuniform vec4 iMouse;\nuniform vec4 iDate;\nuniform float iSampleRate;\nuniform vec3 iChannelResolution[4];\nuniform int iFrame;\nuniform float iTimeDelta;\nuniform float iFrameRate;\nstruct Channel {\n    vec3 resolution;\n    float time;\n};\nuniform Channel iChannel[4];\nuniform sampler2D iChannel0;\nuniform sampler2D iChannel1;\nuniform sampler2D iChannel2;\nuniform sampler2D iChannel3;\nvoid mainImage(out vec4 c, in vec2 f);\n\n// --------- START-SHADER-TOY-CODE-HERE ------------\n\n#pragma includeScene\n\n// --------- END-SHADER-TOY-CODE-HERE ------------\n\nout vec4 outColor;\nvoid main(void)\n{\n    vec4 color = vec4(0.0, 0.0, 0.0, 1.0);\n    mainImage(color, gl_FragCoord.xy);\n    color.w = 1.0;\n    outColor = color;\n}\n"},247:function(n,e,i){"use strict";i.r(e),e.default="#version 300 es\n\n#ifdef GL_ES\nprecision highp float;\nprecision highp int;\nprecision mediump sampler3D;\n#define GLSLIFY 1\n#endif\n\nlayout(location = 0) in vec3 position;\nvoid main()\n{\n    gl_Position = vec4(position.xy, 0.0, 1.0);\n}\n"},248:function(n,e,i){"use strict";i.r(e),e.default="#define GLSLIFY 1\n// Noise pixel size\n#define SIZE 5.0\n// Lower - more flowing\n#define FLUENCY 2.85\n\nfloat rand(vec2 co) {\n  return fract(sin(dot(co.xy , vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 id = ceil(fragCoord/SIZE);\n  vec2 rid = vec2(rand(id), rand(id+iResolution.y));\n\n  float ridFactor = rid.x + rid.y;\n  float f = ridFactor + iTime * FLUENCY *  (ridFactor);\n  float fid = floor(f);\n  f = abs(fract(f) - mod(fid, 2.));\n  //fragColor = vec4(0.1/f);\n  fragColor = clamp(vec4(0.1/f), 0.0, 1.0);\n}\n"},249:function(n,e,i){"use strict";i.r(e),e.default="#define GLSLIFY 1\n#define PI 3.1415926\n#define PI_2 1.5707963\n#define PI_4 0.78539815\n\nfloat roundedRect(vec2 p, float size ){\n  float mask =\n  smoothstep(size, size-.1, abs(p.x)) *\n  smoothstep(size, size-.1, abs(p.y));\n\n  return smoothstep(.45, .5, mask);\n}\n\nfloat roundedCross(vec2 p, float size ){\n  vec2 rp = p;\n  float result = 0.;\n\n  for(float i= -1.; i<=1.; i+=2.){\n    vec2 rp = p;\n    rp *= mat2(cos( sin(PI_2 * i*sin(iTime)) + vec4(0,33,11,0)));\n\n    float mask =\n    smoothstep(size*2., size*2.0-.05, abs(rp.x))  *\n    smoothstep(size, size-.05, abs(rp.y));\n\n    result += smoothstep(.40, .5, mask);\n  }\n\n  return result;\n}\n\nfloat evilEye(vec2 p, float dir){\n  float result = 0.;\n  float l = length(p);\n  result += smoothstep(.05, .045, l);\n\n  result -= smoothstep(0.01, 0.02, p.x*dir+p.y*2.);\n\n  return clamp(result, 0., 1.);\n}\n\nfloat mouth(vec2 p, float size){\n  float l = length(p);\n  float mask = smoothstep(.1*size,.1*size - .005, l);\n  p.y -=0.05*size;\n  p.x *= .6;\n  l = length(p);\n  mask -= smoothstep(.09, .085, l);\n\n  return clamp(mask, 0., 1.);\n}\n\nfloat smile(vec2 p){\n  float result = 0.;\n\n  //Mouth\n  vec2 mP = p;\n  mP.y += .03;\n  float mask = mouth(mP,1.15) - mouth(mP,1.0);\n\n  result += clamp(mask, 0., 1.);\n\n  //Teeth\n  vec2 zP = p;\n  zP.y += .1 + sin(zP.x*300.)*(.02 - abs(zP.x*.11)) - abs(zP.x*.3);\n  result += smoothstep(0.01, 0.001, abs(zP.y)) * step(abs(zP.x), .09);\n\n  return result;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 ouv = fragCoord/iResolution.xy;\n  vec2 uv = (fragCoord - iResolution.xy*.5)/iResolution.y;\n\n  uv *= (sin(iTime *0.33)*.5+.5)*.2 + 0.8;\n\n  float mask = 0.;\n\n  for(float i= -1.; i<=1.; i+=2.){\n    vec2 ruv = uv + vec2(.30,0.) * i;\n\n    ruv.y +=sin(iTime)*.02*i;\n    ruv *= mat2(cos( (sin(iTime+i*1.5))*.1 + vec4(0,33,11,0)));\n\n    mask += roundedRect(ruv, .25);\n    mask -= roundedRect(ruv*1.25, .25);\n\n    for(float i= -1.; i<=1.; i+=2.){\n      vec2 euv = ruv;\n      euv.x += .08*i;\n      euv.y -= .05;\n      mask += evilEye(euv, i);\n    }\n\n    mask += smile(ruv);\n  }\n\n  mask += roundedCross(uv, .05);\n\n  vec3 back = texture(iChannel0, ouv).rgb + .8;\n  vec3 col = mix(back, vec3(0.), mask);\n\n  fragColor = vec4(col,1.0);\n}\n"},250:function(n,e,i){"use strict";i.r(e),e.default="#define GLSLIFY 1\n// Original one hosted on https://www.shadertoy.com/view/WtsGW4\n\n#define rand1(p) fract(sin(p* 78.233)* 43758.5453)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 ouv = fragCoord/iResolution.xy;\n\n  float ofstM = .002 * sin(ouv.y*5. + iTime) * rand1(iTime + floor(ouv.y*100.));\n  vec3 col = texture(iChannel0, ouv + ofstM).rgb;\n\n  float ofstR = .01 * sin(iTime*5.) * rand1(iTime + floor(ouv.y*10.));\n\n  col.r = texture(iChannel0, ouv-vec2(ofstR, 0.)).r;\n\n  fragColor = vec4(col,1.0);\n}\n"},83:function(n,e,i){"use strict";i.r(e);var o=i(29),t=i(261),r=i.n(t),a=i(262),s=i.n(a),l=i(246),u=i(247),f=i(248),c=i(249),m=i(250);e.default={sketch:function(n){var e=n.gl,i=(n.update,n.render,n.pause,r()({gl:e})),t=s()(),a=i.texture(),p=i.texture(),d={blend:{enable:!0,func:{srcRGB:"src alpha",srcAlpha:1,dstRGB:"one minus src alpha",dstAlpha:1}},attributes:{position:t.positions},elements:i.elements(t.cells)},v=i(Object(o.a)({frag:l.default.replace("#pragma includeScene",f.default),vert:u.default,uniforms:{iTime:i.prop("iTime"),iResolution:i.prop("iResolution")}},d,{depth:{mask:!1,enable:!1}})),h=i(Object(o.a)({frag:l.default.replace("#pragma includeScene",c.default),vert:u.default,uniforms:{iTime:i.prop("iTime"),iResolution:i.prop("iResolution"),iChannel0:a}},d,{depth:{mask:!1,enable:!1}})),g=i(Object(o.a)({frag:l.default.replace("#pragma includeScene",m.default),vert:u.default,uniforms:{iTime:i.prop("iTime"),iResolution:i.prop("iResolution"),iChannel0:p}},d));return{render:function(n){var o=n.time,t=n.width,r=n.height;i.poll(),e.flush(),v({iTime:o,iResolution:[t,r,1]}),a({copy:!0,min:"linear",mag:"linear"}),e.flush(),h({iTime:o,iResolution:[t,r,1]}),p({copy:!0,min:"linear",mag:"linear"}),e.flush(),g({iTime:o,iResolution:[t,r,1]})}}},settings:{context:"webgl2",animate:!0}}}}]);
//# sourceMappingURL=28.4ff17a48.chunk.js.map