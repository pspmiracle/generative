{"version":3,"sources":["sketches/016_bloody_canvas_game/Bullet.js"],"names":["Bullet","options","Object","entries","key","option","this","color","random","pick","size","baseOptions","fieldSize","speed","initSpeedFactor","moveAngle","enemies","game","bX","x","bY","y","draw","destroy","Math","cos","sin","width","height","items","forEach","enemy","live","sqrt","explode","ctx","onBackground","context","backgroundContext","lineWidth","tailLength","min","max","beginPath","moveTo","lineTo","PI","stroke","fillStyle","arc","fill","bullets","remove"],"mappings":"sMAEqBA,E,WACnB,WAAYC,GAAU,oBACpB,cAA4BC,OAAOC,QAAQF,GAA3C,eAAqD,CAAC,IAAD,sBAAzCG,EAAyC,KAApCC,EAAoC,KACnDC,KAAKF,GAAOC,EAGdC,KAAKC,MAAQC,IAAOC,KAAK,CAAC,UAAW,UAAW,YAChDH,KAAKI,KAAOJ,KAAKK,YAAYC,UAAY,IACzCN,KAAKO,MAASP,KAAKK,YAAYC,UAAY,IAAON,KAAKQ,gB,qDAG/C,IAAD,OAELC,EAEET,KAFFS,UACQC,EACNV,KADFW,KAAQD,QAGVV,KAAKY,GAAKZ,KAAKa,EACfb,KAAKc,GAAKd,KAAKe,EAEff,KAAKO,QAAU,GAEXP,KAAKO,OAAS,GAChBP,KAAKgB,MAAK,GACVhB,KAAKiB,YAELjB,KAAKa,GAAKK,KAAKC,IAAIV,GAAaT,KAAKO,MACrCP,KAAKe,GAAKG,KAAKE,IAAIX,GAAaT,KAAKO,QAIrCP,KAAKa,GAAK,KACVb,KAAKa,EAAIb,KAAKK,YAAYgB,MAAQ,KAClCrB,KAAKe,GAAK,KACVf,KAAKe,EAAIf,KAAKK,YAAYiB,OAAS,MAEnCtB,KAAKiB,UAGPP,EAAQa,MAAMC,SAAQ,SAAAC,GAChBA,EAAMC,OACSR,KAAKS,KAAK,SAAC,EAAKd,EAAIY,EAAMZ,EAAM,GAAtB,SAA2B,EAAKE,EAAIU,EAAMV,EAAM,IAC5DU,EAAMrB,OACnBqB,EAAMG,UACN,EAAKX,iB,6BAMe,IAOtBY,EAPDC,EAAsB,0DAKrB9B,KAHFK,YAAe0B,EAFQ,EAERA,QAASC,EAFD,EAECA,kBACxBnB,EAEEb,KAFFa,EACAE,EACEf,KADFe,GAKAc,EADEC,EACIE,EAEAD,GAGJE,UAAYjC,KAAKI,KAAO,GAG5B,IAAM8B,EAAahB,KAAKiB,IAAInC,KAAKI,KAAOc,KAAKkB,IAAIpC,KAAKO,MAAO,GAAgB,EAAZP,KAAKI,MACtEyB,EAAIQ,YACJR,EAAIS,OAAOtC,KAAKa,EAAGb,KAAKe,GACxBc,EAAIU,OACFvC,KAAKa,EAAIK,KAAKC,IAAInB,KAAKS,UAAYS,KAAKsB,IAAMN,EAC9ClC,KAAKe,EAAIG,KAAKE,IAAIpB,KAAKS,UAAYS,KAAKsB,IAAMN,GAEhDL,EAAIY,SAGJZ,EAAIa,UAAY1C,KAAKC,MACrB4B,EAAIQ,YACJR,EAAIc,IAAI9B,EAAGE,EAAGf,KAAKI,KAAO,EAAG,EAAa,EAAVc,KAAKsB,IACrCX,EAAIe,OACJf,EAAIY,W,gCAIJzC,KAAKW,KAAKkC,QAAQC,OAAO9C,U","file":"static/js/57.4f3f3aaf.chunk.js","sourcesContent":["import random from 'canvas-sketch-util/random';\n\nexport default class Bullet {\n  constructor(options) {\n    for (const [key, option] of Object.entries(options)) {\n      this[key] = option;\n    }\n\n    this.color = random.pick(['#4b86b4', '#adcbe3', '#63ace5']);\n    this.size = this.baseOptions.fieldSize / 100;\n    this.speed = (this.baseOptions.fieldSize / 100) * this.initSpeedFactor;\n  }\n\n  update() {\n    const {\n      moveAngle,\n      game: { enemies },\n    } = this;\n\n    this.bX = this.x;\n    this.bY = this.y;\n\n    this.speed += -0.1;\n\n    if (this.speed <= 0) {\n      this.draw(true);\n      this.destroy();\n    } else {\n      this.x += Math.cos(moveAngle) * this.speed;\n      this.y += Math.sin(moveAngle) * this.speed;\n    }\n\n    if (\n      this.x < -100 ||\n      this.x > this.baseOptions.width + 100 ||\n      this.y < -100 ||\n      this.y > this.baseOptions.height + 100\n    ) {\n      this.destroy();\n    }\n\n    enemies.items.forEach(enemy => {\n      if (enemy.live) {\n        const distance = Math.sqrt((this.x - enemy.x) ** 2 + (this.y - enemy.y) ** 2);\n        if (distance < enemy.size) {\n          enemy.explode();\n          this.destroy();\n        }\n      }\n    });\n  }\n\n  draw(onBackground = false) {\n    const {\n      baseOptions: { context, backgroundContext },\n      x,\n      y,\n    } = this;\n\n    let ctx;\n    if (onBackground) {\n      ctx = backgroundContext;\n    } else {\n      ctx = context;\n    }\n\n    ctx.lineWidth = this.size / 10;\n\n    // Tail\n    const tailLength = Math.min(this.size * Math.max(this.speed, 1), this.size * 5);\n    ctx.beginPath();\n    ctx.moveTo(this.x, this.y);\n    ctx.lineTo(\n      this.x + Math.cos(this.moveAngle - Math.PI) * tailLength,\n      this.y + Math.sin(this.moveAngle - Math.PI) * tailLength,\n    );\n    ctx.stroke();\n\n    // Body\n    ctx.fillStyle = this.color;\n    ctx.beginPath();\n    ctx.arc(x, y, this.size / 2, 0, Math.PI * 2);\n    ctx.fill();\n    ctx.stroke();\n  }\n\n  destroy() {\n    this.game.bullets.remove(this);\n  }\n}\n"],"sourceRoot":""}