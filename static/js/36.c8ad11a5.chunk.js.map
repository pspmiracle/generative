{"version":3,"sources":["../node_modules/canvas-sketch-util/lib/wrap.js","../node_modules/canvas-sketch-util/math.js","sketches/011_dla/index.js"],"names":["module","exports","value","from","to","TypeError","t","cycle","Math","floor","defined","require","wrap","EPSILON","Number","clamp","min","max","lerp","inverseLerp","abs","toFinite","n","defaultValue","isFinite","expandVector","dims","p","scalar","i","out","lerpArray","length","newArray","initialValue","push","mod","a","b","damp","lambda","dt","exp","fract","sign","degToRad","PI","radToDeg","pingPong","linspace","opts","endpoint","offset","map","_","lerpFrames","values","len","whole","frame","nextFrame","Array","isArray","clamp01","v","smoothstep","x","dampArray","mapRange","inputMin","inputMax","outputMin","outputMax","outVal","expand2D","expand3D","expand4D","sketch","width","height","backGroundCanvas","document","createElement","backgroundContext","getContext","fillStyle","fillRect","margin","sx","sy","pointRadiusS","pointRadius","staticPoints","fill","y","random","range","iY","iX","c","generateFreePoint","time","cos","sin","atan2","freePoints","forEach","subStaticPointsY","subStaticPointsX","beginPath","strokeStyle","lineWidth","arc","stroke","endedProcess","context","drawImage","fpIdx","fp","comparePoints","i1","i2","spIdx","sp","sqrt","settings","dimensions","animate"],"mappings":"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","file":"static/js/36.c8ad11a5.chunk.js","sourcesContent":["module.exports = wrap;\nfunction wrap (value, from, to) {\n  if (typeof from !== 'number' || typeof to !== 'number') {\n    throw new TypeError('Must specify \"to\" and \"from\" arguments as numbers');\n  }\n  // algorithm from http://stackoverflow.com/a/5852628/599884\n  if (from > to) {\n    var t = from;\n    from = to;\n    to = t;\n  }\n  var cycle = to - from;\n  if (cycle === 0) {\n    return to;\n  }\n  return value - cycle * Math.floor((value - from) / cycle);\n}\n","var defined = require('defined');\nvar wrap = require('./lib/wrap');\nvar EPSILON = Number.EPSILON;\n\nfunction clamp (value, min, max) {\n  return min < max\n    ? (value < min ? min : value > max ? max : value)\n    : (value < max ? max : value > min ? min : value);\n}\n\nfunction clamp01 (v) {\n  return clamp(v, 0, 1);\n}\n\nfunction lerp (min, max, t) {\n  return min * (1 - t) + max * t;\n}\n\nfunction inverseLerp (min, max, t) {\n  if (Math.abs(min - max) < EPSILON) return 0;\n  else return (t - min) / (max - min);\n}\n\nfunction smoothstep (min, max, t) {\n  var x = clamp(inverseLerp(min, max, t), 0, 1);\n  return x * x * (3 - 2 * x);\n}\n\nfunction toFinite (n, defaultValue) {\n  defaultValue = defined(defaultValue, 0);\n  return typeof n === 'number' && isFinite(n) ? n : defaultValue;\n}\n\nfunction expandVector (dims) {\n  if (typeof dims !== 'number') throw new TypeError('Expected dims argument');\n  return function (p, defaultValue) {\n    defaultValue = defined(defaultValue, 0);\n    var scalar;\n    if (p == null) {\n      // No vector, create a default one\n      scalar = defaultValue;\n    } else if (typeof p === 'number' && isFinite(p)) {\n      // Expand single channel to multiple vector\n      scalar = p;\n    }\n\n    var out = [];\n    var i;\n    if (scalar == null) {\n      for (i = 0; i < dims; i++) {\n        out[i] = toFinite(p[i], defaultValue);\n      }\n    } else {\n      for (i = 0; i < dims; i++) {\n        out[i] = scalar;\n      }\n    }\n    return out;\n  };\n}\n\nfunction lerpArray (min, max, t, out) {\n  out = out || [];\n  if (min.length !== max.length) {\n    throw new TypeError('min and max array are expected to have the same length');\n  }\n  for (var i = 0; i < min.length; i++) {\n    out[i] = lerp(min[i], max[i], t);\n  }\n  return out;\n}\n\nfunction newArray (n, initialValue) {\n  n = defined(n, 0);\n  if (typeof n !== 'number') throw new TypeError('Expected n argument to be a number');\n  var out = [];\n  for (var i = 0; i < n; i++) out.push(initialValue);\n  return out;\n}\n\nfunction linspace (n, opts) {\n  n = defined(n, 0);\n  if (typeof n !== 'number') throw new TypeError('Expected n argument to be a number');\n  opts = opts || {};\n  if (typeof opts === 'boolean') {\n    opts = { endpoint: true };\n  }\n  var offset = defined(opts.offset, 0);\n  if (opts.endpoint) {\n    return newArray(n).map(function (_, i) {\n      return n <= 1 ? 0 : ((i + offset) / (n - 1));\n    });\n  } else {\n    return newArray(n).map(function (_, i) {\n      return (i + offset) / n;\n    });\n  }\n}\n\nfunction lerpFrames (values, t, out) {\n  t = clamp(t, 0, 1);\n\n  var len = values.length - 1;\n  var whole = t * len;\n  var frame = Math.floor(whole);\n  var fract = whole - frame;\n\n  var nextFrame = Math.min(frame + 1, len);\n  var a = values[frame % values.length];\n  var b = values[nextFrame % values.length];\n  if (typeof a === 'number' && typeof b === 'number') {\n    return lerp(a, b, fract);\n  } else if (Array.isArray(a) && Array.isArray(b)) {\n    return lerpArray(a, b, fract, out);\n  } else {\n    throw new TypeError('Mismatch in value type of two array elements: ' + frame + ' and ' + nextFrame);\n  }\n}\n\nfunction mod (a, b) {\n  return ((a % b) + b) % b;\n}\n\nfunction degToRad (n) {\n  return n * Math.PI / 180;\n}\n\nfunction radToDeg (n) {\n  return n * 180 / Math.PI;\n}\n\nfunction fract (n) {\n  return n - Math.floor(n);\n}\n\nfunction sign (n) {\n  if (n > 0) return 1;\n  else if (n < 0) return -1;\n  else return 0;\n}\n\n// Specific function from Unity / ofMath, not sure its needed?\n// function lerpWrap (a, b, t, min, max) {\n//   return wrap(a + wrap(b - a, min, max) * t, min, max)\n// }\n\nfunction pingPong (t, length) {\n  t = mod(t, length * 2);\n  return length - Math.abs(t - length);\n}\n\nfunction damp (a, b, lambda, dt) {\n  return lerp(a, b, 1 - Math.exp(-lambda * dt));\n}\n\nfunction dampArray (a, b, lambda, dt, out) {\n  out = out || [];\n  for (var i = 0; i < a.length; i++) {\n    out[i] = damp(a[i], b[i], lambda, dt);\n  }\n  return out;\n}\n\nfunction mapRange (value, inputMin, inputMax, outputMin, outputMax, clamp) {\n  // Reference:\n  // https://openframeworks.cc/documentation/math/ofMath/\n  if (Math.abs(inputMin - inputMax) < EPSILON) {\n    return outputMin;\n  } else {\n    var outVal = ((value - inputMin) / (inputMax - inputMin) * (outputMax - outputMin) + outputMin);\n    if (clamp) {\n      if (outputMax < outputMin) {\n        if (outVal < outputMax) outVal = outputMax;\n        else if (outVal > outputMin) outVal = outputMin;\n      } else {\n        if (outVal > outputMax) outVal = outputMax;\n        else if (outVal < outputMin) outVal = outputMin;\n      }\n    }\n    return outVal;\n  }\n}\n\nmodule.exports = {\n  mod: mod,\n  fract: fract,\n  sign: sign,\n  degToRad: degToRad,\n  radToDeg: radToDeg,\n  wrap: wrap,\n  pingPong: pingPong,\n  linspace: linspace,\n  lerp: lerp,\n  lerpArray: lerpArray,\n  inverseLerp: inverseLerp,\n  lerpFrames: lerpFrames,\n  clamp: clamp,\n  clamp01: clamp01,\n  smoothstep: smoothstep,\n  damp: damp,\n  dampArray: dampArray,\n  mapRange: mapRange,\n  expand2D: expandVector(2),\n  expand3D: expandVector(3),\n  expand4D: expandVector(4)\n};\n","import random from 'canvas-sketch-util/random';\nimport { lerp } from 'canvas-sketch-util/math';\n\nconst settings = {\n  dimensions: [2048, 2048],\n  animate: true,\n};\n\nconst sketch = async ({ width, height }) => {\n  const backGroundCanvas = document.createElement('canvas');\n  backGroundCanvas.width = width;\n  backGroundCanvas.height = height;\n  const backgroundContext = backGroundCanvas.getContext('2d');\n  backgroundContext.fillStyle = 'hsl(0, 0%, 10%)';\n  backgroundContext.fillRect(0, 0, width, height);\n\n  const margin = width * 0.1;\n\n  const searchSections = 64;\n  const sectionArea = 1 / searchSections;\n\n  const sx = v => lerp(margin, width - margin, v);\n  const sy = v => lerp(margin, height - margin, v);\n\n  const pointRadius = width * 0.001;\n  const pointRadiusS = pointRadius / width;\n\n  const staticPoints = new Array(searchSections).fill(0).map(() => new Array(searchSections).fill(0).map(() => []));\n  for (let i = 0; i < 40; i += 1) {\n    const y = random.range(0.49, 0.51);\n    const x = random.range(0.49, 0.51);\n\n    const iY = Math.floor(y / sectionArea);\n    const iX = Math.floor(x / sectionArea);\n\n    staticPoints[iY][iX].push({ x, y, c: `hsl(0,50%,50%)` });\n  }\n\n  const generateFreePoint = (time = 0) => {\n    const i = random.range(-Math.PI, Math.PI);\n    const x = Math.cos(i) / 2 + 0.5;\n    const y = Math.sin(i) / 2 + 0.5;\n\n    const a = Math.atan2(y - 0.5, x - 0.5) - Math.PI; // radians\n\n    return {\n      x,\n      y,\n      a,\n      c: `hsl(${time * 5},80%,80%)`,\n    };\n  };\n\n  const freePoints = [];\n\n  staticPoints.forEach(subStaticPointsY => {\n    subStaticPointsY.forEach(subStaticPointsX => {\n      subStaticPointsX.forEach(p => {\n        backgroundContext.fillStyle = 'hsl(0, 50%, 50%)';\n        backgroundContext.fillRect(sx(p.x) - pointRadius, sy(p.y) - pointRadius, pointRadius * 2, pointRadius * 2);\n      });\n    });\n  });\n\n  backgroundContext.beginPath();\n  backgroundContext.strokeStyle = 'hsl(0,50%,98%)';\n  backgroundContext.lineWidth = width * 0.001;\n  backgroundContext.arc(width / 2, height / 2, width / 2 - margin, 0, Math.PI * 2, false);\n  backgroundContext.stroke();\n\n  let endedProcess = false;\n\n  return ({ context, time }) => {\n    context.drawImage(backGroundCanvas, 0, 0);\n\n    context.fillStyle = 'hsl(0, 0%, 98%)';\n\n    if (!endedProcess) {\n      if (freePoints.length < 5000) {\n        for (let i = 0; i < 10; i += 1) {\n          freePoints.push(generateFreePoint(time));\n        }\n      }\n\n      freePoints.forEach(p => {\n        p.x += pointRadiusS * Math.cos(p.a);\n        p.y += pointRadiusS * Math.sin(p.a);\n        context.fillRect(sx(p.x) - pointRadius, sy(p.y) - pointRadius, pointRadius * 2, pointRadius * 2);\n      });\n\n      for (let fpIdx = 0; fpIdx < freePoints.length; fpIdx += 1) {\n        const fp = freePoints[fpIdx];\n\n        const iY = Math.floor(fp.y / sectionArea);\n        const iX = Math.floor(fp.x / sectionArea);\n\n        let comparePoints = [];\n        for (let i1 = -1; i1 <= 1; i1 += 1) {\n          for (let i2 = -1; i2 <= 1; i2 += 1) {\n            if (staticPoints[iY + i1] && staticPoints[iY + i1][iX + i2]) {\n              comparePoints = staticPoints[iY + i1][iX + i2];\n\n              for (let spIdx = 0; spIdx < comparePoints.length; spIdx += 1) {\n                const sp = comparePoints[spIdx];\n\n                if (\n                  Math.abs(sx(fp.x) - sx(sp.x)) < pointRadius * 2 &&\n                  Math.abs(sx(fp.y) - sx(sp.y)) < pointRadius * 2\n                ) {\n                  freePoints[fpIdx] = generateFreePoint(time);\n\n                  const iY = Math.floor(fp.y / sectionArea);\n                  const iX = Math.floor(fp.x / sectionArea);\n\n                  staticPoints[iY][iX].push(fp);\n\n                  backgroundContext.fillStyle = fp.c;\n                  backgroundContext.fillRect(\n                    sx(fp.x) - pointRadius,\n                    sy(fp.y) - pointRadius,\n                    pointRadius * 2,\n                    pointRadius * 2,\n                  );\n\n                  if (Math.sqrt((fp.x - 0.5) ** 2 + (fp.y - 0.5) ** 2) > 0.48) {\n                    endedProcess = true;\n                  }\n\n                  break;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n};\n\nexport default { sketch, settings };\n"],"sourceRoot":""}