{"version":3,"sources":["sketches/019_particles_sphere/shaders/frag.glsl"],"names":[],"mappings":"2GAAA,OAAe","file":"static/js/64.5bb7abc6.chunk.js","sourcesContent":["export default \"precision highp float;\\n#define GLSLIFY 1\\n\\nvarying vec3 vpos;\\n\\nuniform vec2 iResolution;\\nuniform float iTime;\\n\\nvarying float fogDepth;\\nvarying float size;\\nuniform float fogDensity;\\n\\nuniform mat3 uvTransform;\\n\\n#define PI 3.1415926\\n#define TAU 6.2831852\\n#define BLACK_COL vec3(24,32,38)/255.\\n\\n#define rand1(p) fract(sin(p* 78.233)* 43758.5453)\\n#define hue(h) clamp( abs( fract(h + vec4(3,2,1,0)/3.) * 6. - 3.) -1. , 0., 1.)\\n\\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord){\\n  vec2 uv = (uvTransform * vec3(gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1)).xy - .5;\\n\\n  float g = length(uv) * size;\\n\\n  g = (size*.1) / smoothstep(.0, size*.5, g);\\n\\n  fragColor = vec4(hue(length(vpos) * size * .75).rgb * g, g*.75);\\n}\\n\\nvarying vec2 vUv;\\n\\nvoid main() {\\n  mainImage(gl_FragColor, vUv * iResolution.xy);\\n}\\n\";"],"sourceRoot":""}