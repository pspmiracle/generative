(this.webpackJsonpgenerative=this.webpackJsonpgenerative||[]).push([[45,101,102],{234:function(n,i,e){"use strict";e.r(i),i.default="#version 300 es\n#ifdef GL_ES\n    precision highp float;\n    precision highp int;\n    precision mediump sampler3D;\n#define GLSLIFY 1\n#endif\n#define HW_PERFORMANCE 1\nuniform vec3      iResolution;\nuniform float     iTime;\nuniform float     iChannelTime[4];\nuniform vec4      iMouse;\nuniform vec4      iDate;\nuniform float     iSampleRate;\nuniform vec3      iChannelResolution[4];\nuniform int       iFrame;\nuniform float     iTimeDelta;\nuniform float     iFrameRate;\nstruct Channel {\n    vec3  resolution;\n    float time;\n};\nuniform Channel iChannel[4];\nuniform sampler2D iChannel0;\nuniform sampler2D iChannel1;\nuniform sampler2D iChannel2;\nuniform sampler2D iChannel3;\nvoid mainImage( out vec4 c, in vec2 f );\n\n// --------- START-SHADER-TOY-CODE-HERE ------------\n\n// Original one hosted on https://www.shadertoy.com/view/WljGWh\n\n#define STEPS 25.\n\nfloat rand(vec2 p)\n{\n    vec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - iResolution.xy*.5)/iResolution.y;\n\n    float t = iTime;\n    float col = 0.;\n    float sStep = 1./STEPS;\n    float zoomF =  sin(t*.5)*.5+.5;\n\n    for(float i = 1.; i>0.01; i-=sStep){\n        float isf = t*.1;\n        vec2 iuv = uv * (1. + i * .5) + vec2(cos(isf), sin(isf))*2.;\n\n        isf = i*STEPS*.5 - t*5.;\n        vec2 guv = iuv * (3. + zoomF) + vec2(sin(isf), cos(isf))*.05;\n        guv = fract(guv) - .5;\n\n        float v = abs(i*.5 - length(guv));\n        float mi = smoothstep(.005, .0, v);\n\n        if(mi > 0.){\n        \tcol = max(col, 1. - i);\n        }\n    }\n\n    // col += texture(iChannel0, uv).rgb*.01;\n\n    fragColor = vec4(col);\n}\n\n// --------- END-SHADER-TOY-CODE-HERE ------------\n\nout vec4 outColor;\nvoid main( void ) {\n    vec4 color = vec4(0.0, 0.0, 0.0, 1.0);\n    mainImage( color, gl_FragCoord.xy );\n    color.w = 1.0;\n    outColor = color;\n}\n"},235:function(n,i,e){"use strict";e.r(i),i.default="#version 300 es\n#ifdef GL_ES\n    precision highp float;\n    precision highp int;\n    precision mediump sampler3D;\n#define GLSLIFY 1\n#endif\nlayout(location = 0) in vec3 position;\nvoid main() {\n    gl_Position = vec4(position.xy, 0.0, 1.0);\n}\n"},78:function(n,i,e){"use strict";e.r(i);var o=e(261),t=e.n(o),a=e(262),r=e.n(a),l=e(234),s=e(235);i.default={sketch:function(n){var i=n.gl,e=(n.update,n.render,n.pause,t()({gl:i})),o=r()(),a=e({frag:l.default,vert:s.default,uniforms:{iTime:e.prop("iTime"),iResolution:e.prop("iResolution")},blend:{enable:!0,func:{srcRGB:"src alpha",srcAlpha:1,dstRGB:"one minus src alpha",dstAlpha:1}},attributes:{position:o.positions},elements:e.elements(o.cells)});return{render:function(n){var o=n.context,t=n.time,r=n.width,l=n.height;e.poll(),a({iTime:t,iResolution:[r,l,1],iChannel0:e.texture(o)}),i.flush()}}},settings:{context:"webgl2",animate:!0}}}}]);
//# sourceMappingURL=45.60e578f6.chunk.js.map