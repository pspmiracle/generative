{"version":3,"sources":["sketches/035_sphere_drilling/shaders/frag.glsl"],"names":[],"mappings":"2GAAA,OAAe","file":"static/js/93.548acd2c.chunk.js","sourcesContent":["export default \"#version 300 es\\n#ifdef GL_ES\\n    precision highp float;\\n    precision highp int;\\n    precision mediump sampler3D;\\n#define GLSLIFY 1\\n#endif\\n#define HW_PERFORMANCE 1\\nuniform vec3      iResolution;\\nuniform float     iTime;\\nuniform float     iChannelTime[4];\\nuniform vec4      iMouse;\\nuniform vec4      iDate;\\nuniform float     iSampleRate;\\nuniform vec3      iChannelResolution[4];\\nuniform int       iFrame;\\nuniform float     iTimeDelta;\\nuniform float     iFrameRate;\\nstruct Channel {\\n    vec3  resolution;\\n    float time;\\n};\\nuniform Channel iChannel[4];\\nuniform sampler2D iChannel0;\\nuniform sampler2D iChannel1;\\nuniform sampler2D iChannel2;\\nuniform sampler2D iChannel3;\\nvoid mainImage( out vec4 c, in vec2 f );\\n\\n// --------- START-SHADER-TOY-CODE-HERE ------------\\n\\n// Original one hosted on https://www.shadertoy.com/view/wtj3RG\\n\\n#define RADIUS .475\\n#define ISTEP .015\\n\\n#define SF 2./min(iResolution.x,iResolution.y)\\n#define RADIUS_EXP2 RADIUS*RADIUS\\n\\n#define BLACK_COL vec3(16,22,27)/255.\\n#define WHITE_COL vec3(245,248,250)/255.\\n\\nmat2 rot (float a){\\n\\tfloat ca = cos(a);\\n    float sa = sin(a);\\n    return mat2(ca,-sa,sa,ca);\\n}\\n\\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\\n{\\n    vec2 uv = (fragCoord - .5*iResolution.xy)/iResolution.y;\\n\\n    uv *= vec2(1.3333, 1.);  // /(.75,1.)\\n\\n    float m = 0.;\\n    for(float i = -RADIUS+fract(iTime*.25)*ISTEP; i<RADIUS; i+=ISTEP){\\n\\n        vec2 iuv = uv - vec2(i, 0.);\\n        iuv *= rot(iTime*2. - i*10.);\\n\\n        float l = length(iuv);\\n        float r = sqrt(RADIUS_EXP2 - i*i);\\n\\n        m += smoothstep(SF, .0, abs(r-l)) * smoothstep(.0, .075, iuv.y);\\n    }\\n\\n    vec3 col = mix(BLACK_COL, WHITE_COL, m);\\n\\n    fragColor = vec4(col, 1.);\\n}\\n\\n// --------- END-SHADER-TOY-CODE-HERE ------------\\n\\nout vec4 outColor;\\nvoid main( void ) {\\n    vec4 color = vec4(0.0, 0.0, 0.0, 1.0);\\n    mainImage( color, gl_FragCoord.xy );\\n    color.w = 1.0;\\n    outColor = color;\\n}\\n\";"],"sourceRoot":""}