(this.webpackJsonpgenerative=this.webpackJsonpgenerative||[]).push([[95],{228:function(n,e,i){"use strict";i.r(e),e.default="#version 300 es\n#ifdef GL_ES\n    precision highp float;\n    precision highp int;\n    precision mediump sampler3D;\n#define GLSLIFY 1\n#endif\n#define HW_PERFORMANCE 1\nuniform vec3      iResolution;\nuniform float     iTime;\nuniform float     iChannelTime[4];\nuniform vec4      iMouse;\nuniform vec4      iDate;\nuniform float     iSampleRate;\nuniform vec3      iChannelResolution[4];\nuniform int       iFrame;\nuniform float     iTimeDelta;\nuniform float     iFrameRate;\nstruct Channel {\n    vec3  resolution;\n    float time;\n};\nuniform Channel iChannel[4];\nuniform sampler2D iChannel0;\nuniform sampler2D iChannel1;\nuniform sampler2D iChannel2;\nuniform sampler2D iChannel3;\nvoid mainImage( out vec4 c, in vec2 f );\n\n// --------- START-SHADER-TOY-CODE-HERE ------------\n\n// Original one hosted on https://www.shadertoy.com/view/WtlGzS\n\n// Force range [.1, .3]\n#define FORCE .28\n#define INIT_SPEED 80.\n#define AMOUNT 5.\n#define WATER_COL vec3(18,140,200)/255.\n\nfloat rand(vec2 p)\n{\n    vec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nfloat bubbles( vec2 uv, float size, float speed, float timeOfst, float blur, float time)\n{\n    vec2 ruv = uv*size  + .05;\n    vec2 id = ceil(ruv) + speed;\n\n    float t = (time + timeOfst)*speed;\n\n    ruv.y -= t * (rand(vec2(id.x))*0.5+.5)*.1;\n    vec2 guv = fract(ruv) - 0.5;\n\n    ruv = ceil(ruv);\n    float g = length(guv);\n\n    float v = rand(ruv)*0.5;\n    v *= step(v, clamp(FORCE, .1, .3));\n\n    float m = smoothstep(v,v - blur, g);\n\n    v*=.85;\n    m -= smoothstep(v,v- .09, g);\n\n    g = length(guv - vec2(v*.35, v*.35));\n    float hlSize = v*.75;\n    m += smoothstep(hlSize, 0., g)*.75;\n\n    return m;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - .5*iResolution.xy)/iResolution.y;\n\n    float m = 0.;\n\n    float sizeFactor = iResolution.y / 10.;\n\n    float fstep = .1/AMOUNT;\n    for(float i=-1.0; i<=0.; i+=fstep){\n        vec2 iuv = uv + vec2(cos(uv.y*2. + i*20. + iTime*.5)*.1, 0.);\n        float size = (i*.15+0.2) * sizeFactor + 10.;\n        m += bubbles(iuv + vec2(i*.1, 0.), size, INIT_SPEED + i*5., i*10., .3 + i*.25, iTime) * abs(i);\n    }\n\n    vec3 col = WATER_COL + m*.4;\n\n    fragColor = vec4(col,1.0);\n}\n\n// --------- END-SHADER-TOY-CODE-HERE ------------\n\nout vec4 outColor;\nvoid main( void ) {\n    vec4 color = vec4(0.0, 0.0, 0.0, 1.0);\n    mainImage( color, gl_FragCoord.xy );\n    color.w = 1.0;\n    outColor = color;\n}\n"}}]);
//# sourceMappingURL=95.d0857c42.chunk.js.map